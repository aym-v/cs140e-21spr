######################################################################
# you should not have to modify below.
#
#

MAKEFLAGS += --no-print-directory
TEST_PROGS := $(patsubst %.c, %.bin, $(TEST_SRC))
TEST_RUN   := $(patsubst %.c, %.run, $(TEST_SRC))

dep := $(patsubst %.c, %.d, $(TEST_SRC)) $(SUPPORT_OBJS:.o=.d) 
VPATH := $(sort $(dir $(SRC)))

.SUFFIXES: .run

include $(CS140E_2021_PATH)/libpi/includes.mk
CFLAGS += -Wno-unused-function -Wno-unused-variable 

# add the memmap file, libpi and the makefile as dependencies
DEPS := $(MEMMAP) $(LPI) ./Makefile 

all: libs $(TEST_PROGS) # $(TEST_RUN)

libs: 
	make -C $(LPP)

$(SUPPORT_OBJS): $(DEPS)

%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) -c $< -o $@
%.o: %.S $(DEPS)
	$(CC) -c $(CPP_ASFLAGS) $< -o $@

2-write-regs.elf: 2-write-regs.o 2-write-regs-asm.o lab-c-helpers.o 
	$(LD) $(START)  $^ -T $(MEMMAP) -o $@  $(LPI)

2-where-push.elf: 2-where-push.o 2-where-push-asm.o lab-c-helpers.o
	$(LD) $(START)  $^ -T $(MEMMAP) -o $@  $(LPI)

%.elf: %.o $(SUPPORT_OBJS) $(DEPS)  
	$(LD) $(START)  $< $(SUPPORT_OBJS) -T $(MEMMAP) -o $@  $(LPI)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),cleanall)
-include $(dep)  # include dep files
endif
endif

./%.d: %.c $(DEPS)
	$(CC) $(CFLAGS) $< -MM -MT $(@:.d=.o) >$@
%.list: %.elf
	$(OD) -D   $*.elf > $*.list
%.bin: %.list
	$(OCP) $*.elf -O binary $*.bin
%.run: %.bin
	my-install $(TTYUSB) ./$<

# i'm not sure this actually makes things better.
emit: $(DEPS) $(TEST_PROGS)
	@make -f ./Makefile.check emit "TESTS=$(TEST_PROGS)"
run: $(DEPS) $(TEST_PROGS)
	@make -f ./Makefile.check run "TESTS=$(TEST_PROGS)"
check: $(DEPS) $(TEST_PROGS)
	@make -f ./Makefile.check check "TESTS=$(TEST_PROGS)"

update:
	cp *.out ../code

tags: 
	ctags *.[chSs] $(LPP)/*.[ch] $(LPP)/*.[chSs]

clean:
	rm -rf $(NAME) *~ tags *.o *.bin *.elf *.list *.img Makefile.bak  *.d 

.PHONY: libs all tags clean run update

# stop make from deleting these suffix'd files.
.PRECIOUS: %.list %.elf %.o %.d
